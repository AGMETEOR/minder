# Copyright 2023 Stacklok, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediator
  labels:
    # This includes a newline, so ko sees this as valid yaml
    # {{ include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
spec:
  # We'll use autoscaling, sometimes clamped to one instance
  selector:
    matchLabels:
      app: '{{ include "common.names.name" . }}'
  template:
    metadata:
      labels:
        app: '{{ include "common.names.name" . }}'
    spec:
      serviceAccountName: mediator
      containers:
        - name: mediator
          # restricted security context:
          # https://kubernetes.io/docs/concepts/security/pod-security-standards/
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          image: ko://github.com/stacklok/mediator/cmd/server
          args:
          - "serve"
          - "--db-host={{ .Values.db.host }}"
          - "--config=/config/config.yaml"
          # We use two config files, one with all the defaults, and one with
          # additional override values from helm.  (This is a viper feature.)
          - "--config=/config/overrides.yaml"
          - "--grpc-host=0.0.0.0"
          - "--http-host=0.0.0.0"
          - "--github-client-id-file=/secrets/app/client_id"
          - "--github-client-secret-file=/secrets/app/client_secret"
          env:
          - name: "AUTH_ACCESS_TOKEN_PRIVATE_KEY"
            value: "/secrets/auth/access_token_rsa"
          - name: "AUTH_ACCESS_TOKEN_PUBLIC_KEY"
            value: "/secrets/auth/access_token_rsa.pub"
          - name: "AUTH_REFRESH_TOKEN_PRIVATE_KEY"
            value: "/secrets/auth/refresh_token_rsa"
          - name: "AUTH_REFRESH_TOKEN_PUBLIC_KEY"
            value: "/secrets/auth/refresh_token_rsa.pub"
          - name: "AUTH_TOKEN_KEY"
            value: "/secrets/auth/token_key_passphrase"
          
          # ko will always specify a digest, so we don't need to worry about
          # CRI image caching
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: !!int "{{ .Values.service.httpPort }}"
              protocol: TCP
            - name: grpc
              containerPort: !!int "{{ .Values.service.grpcPort }}"
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 4
              memory: 1.5Gi
          volumeMounts:
          - name: config
            mountPath: /config
          - name: auth-secrets
            mountPath: /secrets/auth
          - name: app-secrets
            mountPath: /secrets/app
      volumes:
      - name: config
        configMap:
          name: mediator-config
          items:
          - key: config.yaml
            path: config.yaml
          - key: overrides.yaml
            path: overrides.yaml
      - name: auth-secrets
        secret:
          secretName: mediator-auth-secrets
      - name: app-secrets
        secret:
          secretName: mediator-github-secrets
